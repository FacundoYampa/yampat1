# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# En POO las clases son "estructuras" que necesitan ser "instanciadas"
class TestPrueba1():
# Método que abre chrome
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
# método para cerrar el programa (seleniun)
  def teardown_method(self, method):
    self.driver.quit()
# método con los comandos  
  def test_prueba1(self):
    self.driver.get("http://localhost/yampat1/html/form_registro.html")
    self.driver.set_window_size(1050, 700)
    self.driver.find_element(By.ID, "Nombre").click()
    self.driver.find_element(By.ID, "Nombre").send_keys("facu")
    self.driver.find_element(By.ID, "Apellido").send_keys("yampa")
    self.driver.find_element(By.ID, "FechaNacimiento").send_keys("0002-05-05")
    self.driver.find_element(By.ID, "FechaNacimiento").send_keys("0022-05-05")
    self.driver.find_element(By.ID, "FechaNacimiento").send_keys("0220-05-05")
    self.driver.find_element(By.ID, "FechaNacimiento").send_keys("2204-05-05")
    self.driver.find_element(By.ID, "Email").send_keys("facundo@gmail.com")
    self.driver.find_element(By.ID, "Password").send_keys("asd123")
    self.driver.find_element(By.ID, "RepPassword").send_keys("asd123")
    self.driver.find_element(By.ID, "btn_registrar").click()
  
# despues se los instancia:
scrap = TestPrueba1()
scrap.setup_method()
scrap.test_prueba1()